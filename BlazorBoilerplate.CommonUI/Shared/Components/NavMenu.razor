@using Microsoft.AspNetCore.Components;
@using BlazorBoilerplate.Shared.Dto.Account
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider authStateProvider

@if(IsAdmin || IsCoordinator)
{
<MatNavMenu Style="color: white;" Multi="true" Class="app-sidebar">
    <MatNavItem Href="@navigationManager.ToAbsoluteUri("account/profile").AbsoluteUri">
        <MatIcon>account_circle</MatIcon>
        @if (userInfo == null)
        {
            <div class="spinner-border spinner-border-sm" role="status"></div>
        }
        else
        {
            <span class="miniHover">@userInfo.UserName</span>
        }
    </MatNavItem>
    <AuthorizeView Context="AuthorizeContext">
        <Authorized>
            @if (IsAdmin || IsCoordinator)
            {
                <MatNavSubMenu>
                    <MatNavSubMenuHeader>
                        <MatNavItem AllowSelection="false">
                            <MatIcon>stars</MatIcon><span class="miniHover"> Доп. функции</span>
                        </MatNavItem>
                    </MatNavSubMenuHeader>
                    <MatNavSubMenuList>
                        <MatNavItem Href="@navigationManager.ToAbsoluteUri("drag_and_drop").AbsoluteUri">
                            <MatIcon>touch_app</MatIcon> <span class="miniHover">Канбан</span>
                        </MatNavItem>
                        <MatNavItem Href="@navigationManager.ToAbsoluteUri("screenshots").AbsoluteUri">
                            <MatIcon>screen_share</MatIcon> <span class="miniHover">Скриншоты</span>
                        </MatNavItem>
                    </MatNavSubMenuList>
                </MatNavSubMenu>
                <MatNavItem Href="@navigationManager.ToAbsoluteUri("todo_list").AbsoluteUri">
                    <MatIcon>list_alt</MatIcon> <span class="miniHover">Список дел</span>
                </MatNavItem>
                <MatNavItem Href="@navigationManager.ToAbsoluteUri("dashboard").AbsoluteUri">
                    <MatIcon>bar_chart</MatIcon> <span class="miniHover">Статистика</span>
                </MatNavItem>
                <MatNavItem Href="@navigationManager.ToAbsoluteUri("calendar_page").AbsoluteUri">
                    <MatIcon>event</MatIcon> <span class="miniHover">Календарь</span>
                </MatNavItem>
            }
        </Authorized>
    </AuthorizeView>
    @if (IsLoggedIn)
    {
        <MatNavItem Href="@navigationManager.ToAbsoluteUri("forum").AbsoluteUri" Disabled="@(!IsLoggedIn)">
            <MatIcon>forum</MatIcon> <span class="miniHover">Чат</span>
        </MatNavItem>
    }
    <AuthorizeView Policy="@Policies.IsAdmin" Context="AuthorizeContext">
        <Authorized>
            @if (IsAdmin)
            {
                <MatNavSubMenu>
                    <MatNavSubMenuHeader>
                        <MatNavItem AllowSelection="false">
                            <MatIcon>mail_outline</MatIcon>
                            <span class="miniHover"> Письма</span>
                        </MatNavItem>
                    </MatNavSubMenuHeader>
                    <MatNavSubMenuList>
                        <MatNavItem Href="@navigationManager.ToAbsoluteUri("email_view").AbsoluteUri" Disabled="@(!IsLoggedIn)">
                            <MatIcon>inbox</MatIcon> <span class="miniHover"> Прочесть письмо</span>
                        </MatNavItem>
                        <MatNavItem Href="@navigationManager.ToAbsoluteUri("email").AbsoluteUri" Disabled="@(!IsLoggedIn)">
                            <MatIcon>send</MatIcon> <span class="miniHover"> Отправить письмо</span>
                        </MatNavItem>
                    </MatNavSubMenuList>
                </MatNavSubMenu>
                <MatNavSubMenu>
                    <MatNavSubMenuHeader>
                        <MatNavItem AllowSelection="false">
                            <MatIcon>settings_applications</MatIcon> <span class="miniHover">Админка</span>
                        </MatNavItem>
                    </MatNavSubMenuHeader>
                    <MatNavSubMenuList>
                        <MatNavItem Href="@navigationManager.ToAbsoluteUri("admin/users").AbsoluteUri">
                            <MatIcon>supervisor_account</MatIcon> <span class="miniHover">Пользователи</span>
                        </MatNavItem>
                        <MatNavItem Href="@navigationManager.ToAbsoluteUri("admin/roles").AbsoluteUri">
                            <MatIcon>supervisor_account</MatIcon> <span class="miniHover">Роли</span>
                        </MatNavItem>
                        <MatNavItem Href="@navigationManager.ToAbsoluteUri("admin/blazor_middlware_audit").AbsoluteUri">
                            <MatIcon>change_history</MatIcon> <span class="miniHover">Журнал аудита API</span>
                        </MatNavItem>
                        <MatNavItem Href="@navigationManager.ToAbsoluteUri("admin/dBlogViewer").AbsoluteUri">
                            <MatIcon>notes</MatIcon> <span class="miniHover">Просмотр журнала БД</span>
                        </MatNavItem>
                    </MatNavSubMenuList>
                </MatNavSubMenu>}
        </Authorized>
    </AuthorizeView>
</MatNavMenu>
}
@code { public bool IsLoggedIn = false;
    private bool IsAdmin = false;
    private bool IsCoordinator = false;
    UserInfoDto userInfo = null;

    [CascadingParameter]
    Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        IsLoggedIn = false;
        var user = (await authenticationStateTask).User;
        userInfo = null;

        if (user.Identity.IsAuthenticated)
        {
            IsLoggedIn = true;
            userInfo = await ((IdentityAuthenticationStateProvider)authStateProvider).GetUserInfo();
        }

        if (user.IsInRole("Administrator"))
        {
            IsAdmin = true;
        }

        if (user.IsInRole("Coordinator"))
        {
            IsCoordinator = true;
        }
    } }
