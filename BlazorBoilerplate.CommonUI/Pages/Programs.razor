@page "/programs"

<MainContainer Title="Worklab" SubTitle="Выбирая профессию, ты выбираешь своё будущее">
    <MatTabGroup>
        <MatTab Label="Каталог программ">
            <Title>Экономика</Title>
            <div>
                <Carousel @ref="_carousel" Autoplay="TimeSpan.FromSeconds(3)" Effect="@CarouselEffect.ScrollX">
                    <CarouselSlick>
                        <h3>1</h3>
                    </CarouselSlick>
                    <CarouselSlick>
                        <h3>2</h3>
                    </CarouselSlick>
                    <CarouselSlick>
                        <h3>3</h3>
                    </CarouselSlick>
                    <CarouselSlick>
                        <h3>4</h3>
                    </CarouselSlick>
                    <CarouselSlick>
                        <h3>5</h3>
                    </CarouselSlick>
                    <CarouselSlick>
                        <h3>6</h3>
                    </CarouselSlick>
                </Carousel>
            </div>
            <div class="button-container">
                <Button OnClick="@( _=>_carousel.Previous())" Size="small">Prev</Button>
                <Button OnClick="@( _=>_carousel.Next())" Size="small">Next</Button>
            </div>
            <style>
                .button-container {
                    display: flex;
                    justify-content: space-between;
                    padding-top: 4px;
                }

                .ant-carousel .slick-slide {
                    text-align: center;
                    height: 160px;
                    line-height: 160px;
                    background: #364d79;
                    overflow: hidden;
                }

                    .ant-carousel .slick-slide h3 {
                        color: #fff;
                    }
            </style>
        </MatTab>
        @if (IsAuthenticated)
        {
            <MatTab Label="Мои программы">
                Second Content
            </MatTab>
        }
    </MatTabGroup>
</MainContainer>



@code {
    private bool IsAuthenticated = false;
    Carousel _carousel;

    [CascadingParameter]
    Task<AuthenticationState> authenticationStateTask { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var user = (await authenticationStateTask).User;
        if (user.Identity.IsAuthenticated)
        {
            IsAuthenticated = true;
        }
    }
}
